// import Header from '../Pages/Header';
// import React from 'react';
// import { useNavigate } from "react-router-dom";
// import Axios from "axios";
// import Footer from './Footer';
// import Table from '@mui/material/Table';
// import TableBody from '@mui/material/TableBody';
// import TableCell from '@mui/material/TableCell';
// import TableContainer from '@mui/material/TableContainer';
// import TableHead from '@mui/material/TableHead';
// import TableRow from '@mui/material/TableRow';
// import Paper from '@mui/material/Paper';
// import jwtDecode from "jwt-decode";
// import { Stack, Typography } from '@mui/material';


// const MyAccount = () => {

//     const centeredDivStyle = {
//         position: 'relative',
//         top: '50%',
//         left: '50%',
//         transform: 'translate(-50%, -50%)',
//         backgroundColor: 'lightgray',
//         width: '50rem',
//     };
//     let navigate = useNavigate();

//     const [documentCounts, setDocumentCounts] = React.useState([])
//     const [maxCount, setMaxCount] = React.useState('')
//     const [maxDoc, setMaxDoc] = React.useState('')
//     let maxKeyValue = { key: null, value: null };


//     React.useEffect(() => {
//         const jwtToken = localStorage.getItem("token");
//         function GetAccount() {
//             Axios.get("https://api.si-tara.com/myAccount", {
//                 headers: {
//                     'Access-Control-Allow-Origin': '*',
//                     'x-access-token': localStorage.getItem("token")
//                 }
//             }).then((response) => {
//                 if (response.status === 200) {
//                     const documentCount = Object.entries(response.data).map(([key, value]) => ({ key, value }));
//                     setDocumentCounts(documentCount)
//                     // documentCount.map(({ key, value}) => {
//                     documentCounts.map(obj => {
//                         if (obj.value > maxKeyValue.value) {
//                             // Update the maximum value and its corresponding key
//                             maxKeyValue = { key: obj.key, value: obj.value };
//                         }
//                     });
//                     setMaxDoc(maxKeyValue.key)
//                     setMaxCount(maxKeyValue.value)
//                     // })
//                 } else {
//                     // 400 - invalid token || 401 - user not found
//                     console.log("got 400 or 401")
//                     // navigate("/")
//                 }
//             }).catch((err) => {
//                 // navigate("/")
//             })
//         }

//         GetAccount();
//     }, [])

//     return (
//         <div>
//             <Header />
//             <div
//                 style={{
//                     display: "flex",
//                     flexDirection: "row",
//                     width: "100%",
//                     height: "35rem"
//                 }}>

//                 <div style={
//                     centeredDivStyle
//                 }>
//                     <Stack direction={'row'}>
//                         <div>
//                             <center><Typography style={{ justifyContent: 'center' }}>Documents generated by <b>{jwtDecode(localStorage.getItem('token')).email}</b></Typography></center>
//                             <TableContainer component={Paper}>
//                                 <Table>
//                                     <TableHead>
//                                         <TableRow>
//                                             <TableCell style={{ fontWeight: 'bold' }}>Document Type</TableCell>
//                                             <TableCell style={{ fontWeight: 'bold' }}>Count</TableCell>
//                                         </TableRow>
//                                     </TableHead>
//                                     <TableBody>
//                                         {documentCounts.map(({ key, value }) => (

//                                             <><TableRow key={key}>
//                                                 <TableCell>{key}</TableCell>
//                                                 <TableCell>{value}</TableCell>
//                                             </TableRow>
//                                             </>
//                                         ))}
//                                     </TableBody>
//                                 </Table>
//                             </TableContainer>
//                         </div>
//                         {/* <p>{maxDoc}{maxCount}</p> */}
//                         <Paper><p>The most generated document is <b>{maxDoc}</b> and the count of document is <b>{maxCount}</b></p></Paper>
//                         <Paper>
//                             <ul>
//                                 <li><b>AP_AT</b>: Attack Potential (Attack Trees)</li>
//                                 <li><b>AP_PDF</b>: Attack Potential (TaRA PDF)</li>
//                                 <li><b>AP_SCD</b>: Attack Potential (Security Concept Document)</li>
//                                 <li><b>AP_VD</b>: Attack Potential (Vulnerability Document)</li>
//                                 <li><b>AP_xl</b>: Attack Potential (Armadillo Compatible .xlsm)</li>
//                             </ul>
//                         </Paper>
//                     </Stack>
//                 </div>

//                 {/* <Typography style={{ fontFamily: 'BoschSans' }}>Doc Count of {userMail} for<br /><br /> <h4>Attack Potenetial is</h4> .xlsm: {ap_xlCount}<br /> .PDF: {ap_PDFCount}<br /> AT: {ap_ATCount}<br /> VulnDoc: {ap_VDCount}<br /> Security Concept Doc: {ap_SCDCount} </Typography>
//                 <Typography style={{ fontFamily: 'BoschSans' }}><br /> <h4>Likelihood Estimation is</h4> .xlsm: {le_xlCount}<br /> .PDF: {le_PDFCount}<br /> VulnDoc: {le_VDCount}<br /> Security Concept Doc: {le_SCDCount}</Typography> */}
//             </div>
//             {/* <div style={{ width: '100%' }}> */}
//             <Footer />
//         </div>
//     )
// }

// export default MyAccount;

import Header from '../Pages/Header';
import React, { useState, useEffect } from 'react';
import { useNavigate } from "react-router-dom";
import Axios from "axios";
import Footer from './Footer';
import Table from '@mui/material/Table';
import TableBody from '@mui/material/TableBody';
import TableCell, { tableCellClasses } from '@mui/material/TableCell';
import TableContainer from '@mui/material/TableContainer';
import TableHead from '@mui/material/TableHead';
import TableRow from '@mui/material/TableRow';
import Paper from '@mui/material/Paper';
import jwtDecode from "jwt-decode";
import { Stack, Tooltip, Typography } from '@mui/material';
import { styled } from '@mui/material/styles';

const StyledTableCell = styled(TableCell)(({ theme }) => ({
    [`&.${tableCellClasses.head}`]: {
        backgroundColor: theme.palette.common.black,
        color: theme.palette.common.white,
    },
    [`&.${tableCellClasses.body}`]: {
        fontSize: 14,
    },
}));

const StyledTableRow = styled(TableRow)(({ theme }) => ({
    '&:nth-of-type(odd)': {
        backgroundColor: theme.palette.action.hover,
    },
    '&:last-child td, &:last-child th': {
        border: 0,
    },
}));

const StyledDiv = styled((props) => <div {...props} />)(({ theme }) => ({
    padding: '0px 14%',
    display: 'flex',
    flexDirection: 'column',
    [theme.breakpoints.down('sm')]: {
        padding: '0px 20px'
    }
}))

const MyAccount = () => {
    const [documentCounts, setDocumentCounts] = useState([]);
    const [maxKeyValue, setMaxKeyValue] = useState({ key: null, value: -Infinity });
    const [userDocData, setUserDocData] = useState([])
    const [rowData, setRowData] = useState(0)
    let navigate = useNavigate();

    const GetAccount = (jwtToken) => {

        // const jwtToken = localStorage.getItem("token");
        if (jwtToken) {
            Axios.get("https://api.si-tara.com/myAccount", {
                headers: {
                    'Access-Control-Allow-Origin': '*',
                    'x-access-token': jwtToken
                }
            })
                .then((response) => {
                    if (response.status === 200) {
                        const documentCount = Object.entries(response.data).map(([key, value]) => ({ key, value }));
                        setDocumentCounts(documentCount);
                        const maxDoc = documentCount.reduce((max, curr) => curr.value > max.value ? curr : max, { key: null, value: -Infinity });
                        setMaxKeyValue(maxDoc);
                    } else {
                        console.log("Got error status:", response.status);
                        navigate("/");
                    }
                })
                .catch((err) => {
                    console.error("Error fetching document counts:", err);
                    navigate("/");
                });
        } else {
            navigate("/");
        }
    }

    const GetGeneratedDocs = (jwtToken) => {
        // const jwtToken = localStorage.getItem("token");
        Axios.post("https://api.si-tara.com/getSQLDATA", {
            "email": jwtDecode(jwtToken).email
        }, { headers: { 'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*' } }).then(res => { setUserDocData(res.data); setRowData(res.data.docType.length) })
        // setGeneratedDocs(response.data.projectName)
    }
    const jwtToken = localStorage.getItem("token");

    useEffect(() => {
        GetAccount(jwtToken);
        GetGeneratedDocs(jwtToken);
    }, [jwtToken]);

    return (
        <div>
            <header className="header">
                {/* Header content goes here */}
                <Header />
            </header>
            <StyledDiv style={{}}>
                <div>
                    <Stack direction={'column'}>
                        <div>
                            <center><Typography style={{ justifyContent: 'center' }}>Documents generated by <b>{jwtDecode(localStorage.getItem('token')).email}</b></Typography></center>
                            <TableContainer component={Paper} style={{ marginTop: 40 }}>
                                <Table>
                                    <TableHead>
                                        <StyledTableRow>
                                            <StyledTableCell style={{ fontWeight: 'bold' }}>Document Type</StyledTableCell>
                                            <StyledTableCell style={{ fontWeight: 'bold' }}>Count</StyledTableCell>
                                        </StyledTableRow>
                                    </TableHead>
                                    <TableBody>
                                        {documentCounts.map(({ key, value }) => (
                                            <StyledTableRow key={key}>
                                                <StyledTableCell style={{ width: "max-content" }}>
                                                    <Tooltip title={key === "AP_AT" ? "Attack Potential_Attack Tress" : key === "AP_PDF" ? "Attack Potential_PDF" : key === "AP_SCD" ? "Attack Potential_Security Concepts Document" : key === "AP_VD" ? "Attack Potential_Vulnerability Document" : key === "AP_xl" ? "Attack Potential_Armadillo Compatible" : key === "LE_PDF" ? "Likelihood Estimation_PDF" : key === "LE_SCD" ? "Likelihood Estimation_Security Concepts Document" : key === "LE_VD" ? "Likelihood Estimation_Vulnerability Document" : key === "LE_xl" ? "Likelihood Estimation_Armadillo Compatible" : ""} arrow>
                                                        <Typography>{key}</Typography>
                                                    </Tooltip>
                                                </StyledTableCell>
                                                <StyledTableCell>{value}</StyledTableCell>
                                            </StyledTableRow>
                                        ))}
                                    </TableBody>
                                </Table>
                            </TableContainer>
                        </div>
                        <Paper style={{ margin: "20px 0px", width: "max-content" }}>
                            <p>The most generated document is <b>{maxKeyValue.key}</b> and the count of document is <b>{maxKeyValue.value}</b></p>
                        </Paper>

                        <TableContainer component={Paper}>
                            <Table>
                                <TableHead>
                                    <StyledTableRow>
                                        <StyledTableCell style={{ fontWeight: 'bold' }}>Document Type</StyledTableCell>
                                        <StyledTableCell style={{ fontWeight: 'bold' }}>Project Name</StyledTableCell>
                                        <StyledTableCell style={{ fontWeight: 'bold' }}>Timestamp</StyledTableCell>
                                    </StyledTableRow>
                                </TableHead>
                                <TableBody>
                                    {
                                        [...Array(rowData)].map((_, index) => (
                                            <Tooltip title={userDocData.docType[index] === "AP AT" ? "Attack Potential_Attack Tress" : userDocData.docType[index] === "AP .PDF" ? "Attack Potential_PDF" : userDocData.docType[index] === "AP SCD" ? "Attack Potential_Security Concepts Document" : userDocData.docType[index] === "AP VD" ? "Attack Potential_Vulnerability Document" : userDocData.docType[index] === "AP xl" ? "Attack Potential_Armadillo Compatible" : userDocData.docType[index] === "LE .PDF" ? "Likelihood Estimation_PDF" : userDocData.docType[index] === "LE SCD" ? "Likelihood Estimation_Security Concepts Document" : userDocData.docType[index] === "LE VD" ? "Likelihood Estimation_Vulnerability Document" : userDocData.docType[index] === "LE xl" ? "Likelihood Estimation_Armadillo Compatible" : ""} arrow>
                                                <StyledTableRow key={index}>
                                                    <StyledTableCell>{userDocData.docType[index]}</StyledTableCell>
                                                    <StyledTableCell>{userDocData.projectName[index]}</StyledTableCell>
                                                    <StyledTableCell>{userDocData.timeStamp[index]}</StyledTableCell>
                                                </StyledTableRow>
                                            </Tooltip>
                                        ))
                                    }
                                </TableBody>
                            </Table>
                        </TableContainer>
                    </Stack>
                </div>
            </StyledDiv>
            <div style={{ marginTop: 15 }}>
                <Footer />
            </div>
        </div>
    );
}

export default MyAccount;
